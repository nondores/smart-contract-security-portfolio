# Missing Timeout Mechanism Allows Griefing

**Platform:** Cyfrin CodeHawks  
**Link:** [Submission #416](https://codehawks.cyfrin.io/c/2025-04-rock-paper-scissors/s/416)  
**Severity:** Medium  
**Status:** Acknowledged

## 🧠 Summary
A malicious or unresponsive player can indefinitely stall the game by never revealing their move. This leads to locked funds and an unresolved game state.

## 🔍 Vulnerability Details
The contract fails to enforce a timeout in the `revealMove` phase. While a `lastAction` timestamp is tracked, there is no logic to recover or cancel a stuck game session.

```solidity
function revealMove(bytes32 _salt, string calldata _move) external {
    require(state == GameState.Committed, "Invalid state");
    // No check on time passed since commitment
}
##💥 Impact
Funds remain indefinitely locked.
The second player (who has already revealed) suffers economic loss.
Game is vulnerable to griefing attacks.

##🛠️ Tools Used
Manual source code analysis
Remix testing

##🧩 Recommendation
Introduce a revealTimeout parameter and enforce a condition in revealMove:

solidity
Copy
Edit
require(block.timestamp <= lastAction + revealTimeout, "Reveal phase expired");
Also, implement a recovery function:

solidity
Copy
Edit
function claimTimeout() external {
    require(state == GameState.Committed, "Invalid state");
    require(block.timestamp > lastAction + revealTimeout, "Too early");

    // Return funds to player who revealed or allow game reset
}
```bash
nano WeatherWitness/vulnerability-1.md
